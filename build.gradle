buildscript {
    apply from: 'config.gradle'

    repositories {
        mavenCentral()
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
    }

    dependencies {
        classpath "gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:$protobufVersion"
    }
}

plugins {
    id "java"
    id "io.freefair.lombok" version "$lombokVersion" apply false
    id "io.spring.dependency-management" version "$dependencyVersion" apply false
    id "org.springframework.boot" version "$springBootVersion" apply false
    id "com.google.protobuf" version "$protobufVersion" apply false
}

allprojects {
    group 'com.kon'
    version '1.0-SNAPSHOT'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
    }
}



subprojects {
    plugins.apply("java")
    plugins.apply("checkstyle")
    plugins.apply("io.freefair.lombok")
    plugins.apply("io.spring.dependency-management")
    plugins.apply("org.springframework.boot")

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
        }

        dependencies {
            dependencySet(group: "org.slf4j", version: "1.7.30") {
                entry "slf4j-api"
                entry "slf4j-simple"
                entry "slf4j-log4j12"
            }
            dependency "io.grpc:grpc-all:1.43.0"
        }
    }

    dependencies {
        implementation "org.slf4j:slf4j-api"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    compileJava {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    compileTestJava {
        options.encoding = "UTF-8"
        options.compilerArgs << "-Xlint:unchecked"
    }

    test {
        useJUnitPlatform()
    }

    task checkstyle(type: Checkstyle) {
        configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
        ignoreFailures true
        showViolations true
        source = fileTree('src')
        include '**/*.java'
        exclude '**/test/**'
        exclude '**/build/**'
        classpath = files()
    }

    task removeLombokConfig() {
        def subProjectPath = project.projectDir
        if (null != subProjectPath) {
            def lombokConfigFile = new File(subProjectPath, "lombok.config")
            if (lombokConfigFile.exists()) {
                lombokConfigFile.delete()
            }
        }
    }

    task removeOutputLog() {
        def subProjectPath = project.projectDir
        if (null != subProjectPath) {
            def logPath = new File(subProjectPath, "output.log")
            if (logPath.exists()) {
                logPath.delete()
            }
        }
    }

    jar {
        exclude("**/application-*.yml")
    }

    defaultTasks "assemble"
}
